{"ast":null,"code":"// import Localbase from \"localbase\";\n// import QuestionData, {\n//   version,\n// } from \"/Users/constantine/Dev/FrontEnd/progress/src/450DSAFinal.js\";\n// let db = new Localbase(\"db\");\n// window.db = db;\n// db.config.debug = false;\n// const localVersion = localStorage.getItem(\"450version\");\n// window.localVersion = localVersion;\n// window.version = version;\n// export function insertData(callback) {\n//   QuestionData.forEach((topic, index) => {\n//     db.collection(\"450dsaArchive\").add(\n//       topic,\n//       topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase()\n//     );\n//   });\n//   getData(callback);\n// }\n// export function getData(callback) {\n//   db.collection(\"450dsaArchive\")\n//     .get()\n//     .then((data) => {\n//       if (data.length === 0) {\n//         insertData(callback);\n//       } else {\n//         data.sort((a, b) => {\n//           return a.position - b.position;\n//         });\n//         if (localVersion === null || localVersion === undefined) {\n//           localStorage.setItem(\"450version\", 100000000);\n//           setTimeout(() => {\n//             window.location.reload();\n//           }, 3000);\n//         }\n//         if (parseInt(localVersion) !== version) {\n//           let i = 0;\n//           for (let topic of data) {\n//             let dataFromJSON = QuestionData[i].questions;\n//             let len = dataFromJSON.length;\n//             let key = topic.topicName\n//               .replace(/[^A-Z0-9]+/gi, \"_\")\n//               .toLowerCase();\n//             topic.questions.forEach((qObj, index) => {\n//               if (index < len) {\n//                 if (qObj.Done) {\n//                   dataFromJSON[index][\"Done\"] = true;\n//                 }\n//                 if (qObj.hasOwnProperty(\"Bookmark\")) {\n//                   dataFromJSON[index][\"Bookmark\"] = qObj.Bookmark;\n//                 } else {\n//                   dataFromJSON[index][\"Bookmark\"] = false;\n//                 }\n//                 if (qObj.hasOwnProperty(\"Notes\")) {\n//                   dataFromJSON[index][\"Notes\"] = qObj.Notes;\n//                 } else {\n//                   dataFromJSON[index][\"Notes\"] = \"\";\n//                 }\n//               }\n//             });\n//             updateDBData(key, {\n//               started: topic.started,\n//               doneQuestions: topic.doneQuestions,\n//               questions: dataFromJSON,\n//             });\n//             i++;\n//           }\n//           localStorage.setItem(\"450version\", version);\n//           setTimeout(() => {\n//             window.location.reload();\n//           }, 3000);\n//         } else {\n//           return callback(data);\n//         }\n//       }\n//     });\n// }\n// export function getTopicData(key, callback) {\n//   db.collection(\"450dsaArchive\")\n//     .doc(key)\n//     .get()\n//     .then((document) => {\n//       callback(document);\n//     });\n// }\n// export function updateDBData(key, updateData) {\n//   db.collection(\"450dsaArchive\").doc(key).update(updateData);\n// }\n// export function resetDBData(callback) {\n//   db.collection(\"450dsaArchive\")\n//     .delete()\n//     .then((response) => {\n//       callback(response);\n//     })\n//     .catch((error) => {\n//       console.log(\"There was an error, do something else\", error);\n//     });\n// }\n// export function exportDBData(callback) {\n//   db.collection(\"450dsaArchive\")\n//     .get()\n//     .then((data) => {\n//       callback(data);\n//     });\n// }\n// export function importDBData(data, callback) {\n//   resetDBData((response) => {\n//     new Promise((resolve, reject) => {\n//       data.forEach((topic, index) => {\n//         db.collection(\"450dsaArchive\").add(\n//           topic,\n//           topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase()\n//         );\n//         if (index === data.length - 1) {\n//           resolve();\n//         }\n//       });\n//     }).then(() => {\n//       getData((data) => {\n//         callback(data);\n//       });\n//     });\n//   });\n// }","map":{"version":3,"sources":["/Users/constantine/Dev/FrontEnd/progress/src/services/dbServices.js"],"names":[],"mappingssourcesContent":["// import Localbase from \"localbase\";\n// import QuestionData, {\n//   version,\n// } from \"/Users/constantine/Dev/FrontEnd/progress/src/450DSAFinal.js\";\n// let db = new Localbase(\"db\");\n// window.db = db;\n// db.config.debug = false;\n// const localVersion = localStorage.getItem(\"450version\");\n// window.localVersion = localVersion;\n// window.version = version;\n\n// export function insertData(callback) {\n//   QuestionData.forEach((topic, index) => {\n//     db.collection(\"450dsaArchive\").add(\n//       topic,\n//       topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase()\n//     );\n//   });\n//   getData(callback);\n// }\n\n// export function getData(callback) {\n//   db.collection(\"450dsaArchive\")\n//     .get()\n//     .then((data) => {\n//       if (data.length === 0) {\n//         insertData(callback);\n//       } else {\n//         data.sort((a, b) => {\n//           return a.position - b.position;\n//         });\n//         if (localVersion === null || localVersion === undefined) {\n//           localStorage.setItem(\"450version\", 100000000);\n//           setTimeout(() => {\n//             window.location.reload();\n//           }, 3000);\n//         }\n\n//         if (parseInt(localVersion) !== version) {\n//           let i = 0;\n//           for (let topic of data) {\n//             let dataFromJSON = QuestionData[i].questions;\n//             let len = dataFromJSON.length;\n//             let key = topic.topicName\n//               .replace(/[^A-Z0-9]+/gi, \"_\")\n//               .toLowerCase();\n//             topic.questions.forEach((qObj, index) => {\n//               if (index < len) {\n//                 if (qObj.Done) {\n//                   dataFromJSON[index][\"Done\"] = true;\n//                 }\n//                 if (qObj.hasOwnProperty(\"Bookmark\")) {\n//                   dataFromJSON[index][\"Bookmark\"] = qObj.Bookmark;\n//                 } else {\n//                   dataFromJSON[index][\"Bookmark\"] = false;\n//                 }\n//                 if (qObj.hasOwnProperty(\"Notes\")) {\n//                   dataFromJSON[index][\"Notes\"] = qObj.Notes;\n//                 } else {\n//                   dataFromJSON[index][\"Notes\"] = \"\";\n//                 }\n//               }\n//             });\n//             updateDBData(key, {\n//               started: topic.started,\n//               doneQuestions: topic.doneQuestions,\n//               questions: dataFromJSON,\n//             });\n//             i++;\n//           }\n//           localStorage.setItem(\"450version\", version);\n//           setTimeout(() => {\n//             window.location.reload();\n//           }, 3000);\n//         } else {\n//           return callback(data);\n//         }\n//       }\n//     });\n// }\n\n// export function getTopicData(key, callback) {\n//   db.collection(\"450dsaArchive\")\n//     .doc(key)\n//     .get()\n//     .then((document) => {\n//       callback(document);\n//     });\n// }\n\n// export function updateDBData(key, updateData) {\n//   db.collection(\"450dsaArchive\").doc(key).update(updateData);\n// }\n\n// export function resetDBData(callback) {\n//   db.collection(\"450dsaArchive\")\n//     .delete()\n//     .then((response) => {\n//       callback(response);\n//     })\n//     .catch((error) => {\n//       console.log(\"There was an error, do something else\", error);\n//     });\n// }\n\n// export function exportDBData(callback) {\n//   db.collection(\"450dsaArchive\")\n//     .get()\n//     .then((data) => {\n//       callback(data);\n//     });\n// }\n\n// export function importDBData(data, callback) {\n//   resetDBData((response) => {\n//     new Promise((resolve, reject) => {\n//       data.forEach((topic, index) => {\n//         db.collection(\"450dsaArchive\").add(\n//           topic,\n//           topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase()\n//         );\n//         if (index === data.length - 1) {\n//           resolve();\n//         }\n//       });\n//     }).then(() => {\n//       getData((data) => {\n//         callback(data);\n//       });\n//     });\n//   });\n// }\n"]},"metadata":{},"sourceType":"module"}