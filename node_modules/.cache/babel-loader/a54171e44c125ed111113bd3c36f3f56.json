{"ast":null,"code":"import _objectSpread from\"/Users/constantine/Dev/FrontEnd/progress/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/constantine/Dev/FrontEnd/progress/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,createContext}from\"react\";import{BrowserRouter as Router,Route}from\"react-router-dom\";import{getData,updateDBData,resetDBData,exportDBData,importDBData}from\"./services/dbServices\";import{saveAs}from\"file-saver\";import Spinner from\"react-bootstrap/Spinner\";import TopicCard from\"./components/TopicCard/TopicCard\";import Topic from\"./components/Topic/Topic\";import About from\"./components/About/About\";import Footer from\"./components/Footer/Footer\";import ReactGA from\"react-ga\";import\"./App.css\";// Creating a theme context\nexport var ThemeContext=createContext(null);function App(){// setting state for data received from the DB\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),questionData=_useState2[0],setquestionData=_useState2[1];// if dark theme is enabled or not\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),dark=_useState4[0],setDark=_useState4[1];// useEffect for fetching data from DB on load and init GA\nuseEffect(function(){localStorage.removeItem(\"cid\");ReactGA.initialize(process.env.REACT_APP_GA_TRACKING_ID);ReactGA.pageview(window.location.pathname+window.location.search);getData(function(QuestionData){setquestionData(QuestionData);});//implementing dark theme mode option\n// checking if dark mode \"isDark\" is already declared or not\nif(!(\"isDark\"in window.localStorage)){window.localStorage.setItem(\"isDark\",dark);}else{// initialising the value of dark with the already stored value\nvar temp=window.localStorage[\"isDark\"];if(temp===\"false\"){setDark(false);}else{setDark(true);}}},[]);//to update progress in '/' route and also update DB\nfunction updateData(key,topicData,topicPosition){var reGenerateUpdatedData=questionData.map(function(topic,index){if(index===topicPosition){updateDBData(key,topicData);return _objectSpread({topicName:topic.topicName,position:topic.position},topicData);}else{return topic;}});setquestionData(reGenerateUpdatedData);}// reset and clear DB\nfunction resetData(){resetDBData(function(response){setquestionData([]);window.location.replace(window.location.origin);});}// export 450DSA-Progress data\nfunction exportData(callback){exportDBData(function(data){var fileData=JSON.stringify(data);var blob=new Blob([fileData],{type:\"text/plain\"});saveAs(blob,\"progress.json\");callback();});}// import 450DSA-Progress data\nfunction importData(data,callback){importDBData(data,function(QuestionData){setquestionData(QuestionData);callback();});}return/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(\"div\",{className:dark?\"App dark\":\"App\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"app-heading text-center mt-5\",style:{color:dark?\"white\":\"\"}},\"450 DSA Cracker\"),questionData.length===0?/*#__PURE__*/ // load spinner until data is fetched from DB\nReact.createElement(\"div\",{className:\"d-flex justify-content-center\"},/*#__PURE__*/React.createElement(Spinner,{animation:\"grow\",variant:\"success\"})):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ThemeContext.Provider,{value:dark},/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\",children:/*#__PURE__*/React.createElement(TopicCard,{questionData:questionData})}),/*#__PURE__*/React.createElement(Route,{path:\"/about\",children:/*#__PURE__*/React.createElement(About,{resetData:resetData,exportData:exportData,importData:importData,setQuestionData:setquestionData})}),/*#__PURE__*/React.createElement(Route,{path:\"/array\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[0],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/matrix\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[1],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/string\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[2],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/search_sort\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[3],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/linked_list\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[4],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/binary_trees\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[5],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/bst\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[6],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/greedy\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[7],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/backtracking\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[8],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/stacks_queues\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[9],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/heap\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[10],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/graph\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[11],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/trie\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[12],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/dynamic_programming\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[13],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/bit_manipulation\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[14],updateData:updateData})}),/*#__PURE__*/React.createElement(Route,{path:\"/progress\",children:/*#__PURE__*/React.createElement(Topic,{data:questionData[14],updateData:updateData})}))),/*#__PURE__*/React.createElement(Footer,{dark:dark,setDark:setDark})));}export default App;","map":{"version":3,"sources":["/Users/constantine/Dev/FrontEnd/progress/src/App.js"],"names":["React","useState","useEffect","createContext","BrowserRouter","Router","Route","getData","updateDBData","resetDBData","exportDBData","importDBData","saveAs","Spinner","TopicCard","Topic","About","Footer","ReactGA","ThemeContext","App","questionData","setquestionData","dark","setDark","localStorage","removeItem","initialize","process","env","REACT_APP_GA_TRACKING_ID","pageview","window","location","pathname","search","QuestionData","setItem","temp","updateData","key","topicData","topicPosition","reGenerateUpdatedData","map","topic","index","topicName","position","resetData","response","replace","origin","exportData","callback","data","fileData","JSON","stringify","blob","Blob","type","importData","color","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport {\n  getData,\n  updateDBData,\n  resetDBData,\n  exportDBData,\n  importDBData,\n} from \"./services/dbServices\";\nimport { saveAs } from \"file-saver\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport TopicCard from \"./components/TopicCard/TopicCard\";\nimport Topic from \"./components/Topic/Topic\";\nimport About from \"./components/About/About\";\nimport Footer from \"./components/Footer/Footer\";\nimport ReactGA from \"react-ga\";\nimport \"./App.css\";\n\n// Creating a theme context\nexport const ThemeContext = createContext(null);\n\nfunction App() {\n  // setting state for data received from the DB\n  const [questionData, setquestionData] = useState([]);\n\n  // if dark theme is enabled or not\n  const [dark, setDark] = useState(false);\n\n  // useEffect for fetching data from DB on load and init GA\n  useEffect(() => {\n    localStorage.removeItem(\"cid\");\n    ReactGA.initialize(process.env.REACT_APP_GA_TRACKING_ID);\n    ReactGA.pageview(window.location.pathname + window.location.search);\n    getData((QuestionData) => {\n      setquestionData(QuestionData);\n    });\n\n    //implementing dark theme mode option\n    // checking if dark mode \"isDark\" is already declared or not\n    if (!(\"isDark\" in window.localStorage)) {\n      window.localStorage.setItem(\"isDark\", dark);\n    } else {\n      // initialising the value of dark with the already stored value\n      let temp = window.localStorage[\"isDark\"];\n      if (temp === \"false\") {\n        setDark(false);\n      } else {\n        setDark(true);\n      }\n    }\n  }, []);\n\n  //to update progress in '/' route and also update DB\n  function updateData(key, topicData, topicPosition) {\n    let reGenerateUpdatedData = questionData.map((topic, index) => {\n      if (index === topicPosition) {\n        updateDBData(key, topicData);\n        return {\n          topicName: topic.topicName,\n          position: topic.position,\n          ...topicData,\n        };\n      } else {\n        return topic;\n      }\n    });\n    setquestionData(reGenerateUpdatedData);\n  }\n\n  // reset and clear DB\n  function resetData() {\n    resetDBData((response) => {\n      setquestionData([]);\n      window.location.replace(window.location.origin);\n    });\n  }\n\n  // export 450DSA-Progress data\n\n  function exportData(callback) {\n    exportDBData((data) => {\n      const fileData = JSON.stringify(data);\n      const blob = new Blob([fileData], { type: \"text/plain\" });\n      saveAs(blob, \"progress.json\");\n      callback();\n    });\n  }\n\n  // import 450DSA-Progress data\n\n  function importData(data, callback) {\n    importDBData(data, (QuestionData) => {\n      setquestionData(QuestionData);\n      callback();\n    });\n  }\n\n  return (\n    <Router>\n      <div className={dark ? \"App dark\" : \"App\"}>\n        <h1\n          className=\"app-heading text-center mt-5\"\n          style={{ color: dark ? \"white\" : \"\" }}\n        >\n          450 DSA Cracker\n        </h1>\n\n        {questionData.length === 0 ? (\n          // load spinner until data is fetched from DB\n          <div className=\"d-flex justify-content-center\">\n            <Spinner animation=\"grow\" variant=\"success\" />\n          </div>\n        ) : (\n          <>\n            <ThemeContext.Provider value={dark}>\n              {/* HOME AND ABOUT ROUTE */}\n              <Route\n                exact\n                path=\"/\"\n                children={<TopicCard questionData={questionData}></TopicCard>}\n              />\n              <Route\n                path=\"/about\"\n                children={\n                  <About\n                    resetData={resetData}\n                    exportData={exportData}\n                    importData={importData}\n                    setQuestionData={setquestionData}\n                  ></About>\n                }\n              />\n\n              {/* TOPIC ROUTE */}\n              <Route\n                path=\"/array\"\n                children={\n                  <Topic data={questionData[0]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/matrix\"\n                children={\n                  <Topic data={questionData[1]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/string\"\n                children={\n                  <Topic data={questionData[2]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/search_sort\"\n                children={\n                  <Topic data={questionData[3]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/linked_list\"\n                children={\n                  <Topic data={questionData[4]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/binary_trees\"\n                children={\n                  <Topic data={questionData[5]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/bst\"\n                children={\n                  <Topic data={questionData[6]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/greedy\"\n                children={\n                  <Topic data={questionData[7]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/backtracking\"\n                children={\n                  <Topic data={questionData[8]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/stacks_queues\"\n                children={\n                  <Topic data={questionData[9]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/heap\"\n                children={\n                  <Topic data={questionData[10]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/graph\"\n                children={\n                  <Topic data={questionData[11]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/trie\"\n                children={\n                  <Topic data={questionData[12]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/dynamic_programming\"\n                children={\n                  <Topic data={questionData[13]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/bit_manipulation\"\n                children={\n                  <Topic data={questionData[14]} updateData={updateData} />\n                }\n              />\n              <Route\n                path=\"/progress\"\n                children={\n                  <Topic data={questionData[14]} updateData={updateData} />\n                }\n              />\n            </ThemeContext.Provider>\n          </>\n        )}\n        <Footer dark={dark} setDark={setDark}></Footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}