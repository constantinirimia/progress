{"ast":null,"code":"var _jsxFileName = \"/Users/constantine/Dev/FrontEnd/progress/src/components/Topic/Topic.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Fade from \"react-reveal/Fade\";\nimport { Link } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"./Topic.css\";\nimport { ThemeContext } from \"../../App\";\nimport Button from \"react-bootstrap/Button\";\nexport default function Topic({\n  data,\n  updateData\n}) {\n  /*\n    This component takes data releted to a paticular topic \n    and updateData() from App component\n  */\n\n  /*\n    Setting state for fields that comes from `data` prop \n    so that `data` prop is not undefined on reload\n  */\n  const [select, setSelected] = useState([]);\n  const [questionsTableData, setQuestionsTableData] = useState([]);\n  const [topicName, setTopicName] = useState(\"\");\n  const dark = useContext(ThemeContext); // updating states using useEffect with dependency  on `data` prop\n\n  useEffect(() => {\n    if (data !== undefined) {\n      let doneQuestion = [];\n      let tableData = data.questions.map((question, index) => {\n        if (question.Done) {\n          doneQuestion.push(index);\n        }\n        /*\n        |\tHidden properties `_is_selected` and `_search_text` are used to sort the table\n        |\tand search the table respectively. react-bootstrap-table does not allow sorting\n        |\tby selectRow by default, and requires plain text to perform searches.\n        */\n\n\n        return {\n          id: index,\n          question: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n            href: question.URL,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            style: {\n              fontWeight: \"600\",\n              fontSize: \"20px\"\n            },\n            className: \"question-link\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 8\n            }\n          }, question.Problem), /*#__PURE__*/React.createElement(OverlayTrigger, {\n            placement: \"left\",\n            overlay: question.Notes && question.Notes.length !== 0 ? renderTooltipView : renderTooltipAdd,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 8\n            }\n          }, /*#__PURE__*/React.createElement(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"16\",\n            height: \"16\",\n            fill: \"currentColor\",\n            class: question.Notes && question.Notes.length !== 0 ? \"bi bi-sticky-fill\" : \"bi bi-sticky\",\n            viewBox: \"0 0 16 16\",\n            style: {\n              float: \"right\",\n              color: \"green\",\n              cursor: \"pointer\"\n            },\n            onClick: () => shownotes(index),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }\n          }, question.Notes && question.Notes.length !== 0 ? /*#__PURE__*/React.createElement(\"path\", {\n            d: \"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1h-11zm6 8.5a1 1 0 0 1 1-1h4.396a.25.25 0 0 1 .177.427l-5.146 5.146a.25.25 0 0 1-.427-.177V9.5z\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 11\n            }\n          }) : /*#__PURE__*/React.createElement(\"path\", {\n            d: \"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1h-11zM2 2.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 .5.5V8H9.5A1.5 1.5 0 0 0 8 9.5V14H2.5a.5.5 0 0 1-.5-.5v-11zm7 11.293V9.5a.5.5 0 0 1 .5-.5h4.293L9 13.793z\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 11\n            }\n          })))),\n          _is_selected: question.Done,\n          _search_text: question.Problem\n        };\n      });\n      setQuestionsTableData(tableData);\n      setTopicName(data.topicName);\n      setSelected(doneQuestion);\n    }\n  }, [data]); //tooltip functions\n\n  const renderTooltipView = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, props, {\n    className: \"in\",\n    id: \"button-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 3\n    }\n  }), \"View Notes\");\n\n  const renderTooltipAdd = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, props, {\n    className: \"in\",\n    id: \"button-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  }), \"Add Notes\"); // seacrh bar config\n\n\n  const SearchBar = props => {\n    const handleChange = e => {\n      props.onSearch(e.target.value);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topic-input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RandomButton, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"text-center search-input-container\",\n      placeholder: \"Search Question.. \\uD83D\\uDD0D\",\n      \"aria-label\": \"Search Question\",\n      \"aria-describedby\": \"basic-addon2\",\n      onChange: handleChange,\n      style: {\n        fontSize: \"18px\",\n        fontWeight: \"600\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"success\",\n      style: {\n        borderTopLeftRadius: \"0px\",\n        borderBottomLeftRadius: \"0px\",\n        background: \"rgb(200, 230, 201)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"completed-questions\",\n      style: {\n        color: \"black\",\n        padding: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 10\n      }\n    }, data.doneQuestions, \"/\", data.questions.length), \" \", \"Done\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"emojiFix\",\n      role: \"img\",\n      \"aria-label\": \"checker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 10\n      }\n    }, \"\\u2705\")))))));\n  }; // table config\n\n\n  const columns = [{\n    dataField: \"id\",\n    text: \"Q-Id\",\n    headerStyle: {\n      width: \"80px\",\n      fontSize: \"20px\",\n      textAlign: \"center\"\n    },\n    style: {\n      fontSize: \"20px\",\n      cursor: \"pointer\",\n      textAlign: \"center\"\n    },\n    events: {\n      onClick: (e, column, columnIndex, row, rowIndex) => {\n        handleSelect(row, !row._is_selected);\n      }\n    }\n  }, {\n    dataField: \"question\",\n    text: \"Questions\",\n    headerStyle: {\n      fontSize: \"20px\",\n      textAlign: \"center\"\n    }\n  }, {\n    dataField: \"_is_selected\",\n    text: \"Is Selected\",\n    headerStyle: {\n      fontSize: \"20px\"\n    },\n    hidden: true,\n    sort: true\n  }, {\n    dataField: \"_search_text\",\n    text: \"Search Text\",\n    headerStyle: {\n      fontSize: \"20px\"\n    },\n    hidden: true\n  }];\n  const rowStyle = {\n    fontSize: \"20px\"\n  };\n  const selectRow = {\n    mode: \"checkbox\",\n    style: {\n      background: dark ? \"#393E46\" : \"#c8e6c9\",\n      fontSize: \"24px\"\n    },\n    selected: select,\n    onSelect: handleSelect,\n    hideSelectAll: true\n  };\n  const sortMode = {\n    dataField: \"_is_selected\",\n    order: \"asc\"\n  }; // func() triggered when a question is marked done\n\n  function handleSelect(row, isSelect) {\n    let key = topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase();\n    let newDoneQuestion = [...select];\n    let updatedQuestionsStatus = data.questions.map((question, index) => {\n      if (row.id === index) {\n        question.Done = isSelect;\n\n        if (isSelect) {\n          newDoneQuestion.push(row.id);\n        } else {\n          var pos = newDoneQuestion.indexOf(row.id);\n          newDoneQuestion.splice(pos, 1);\n        }\n\n        return question;\n      } else {\n        return question;\n      }\n    });\n    updateData(key, {\n      started: newDoneQuestion.length > 0 ? true : false,\n      doneQuestions: newDoneQuestion.length,\n      questions: updatedQuestionsStatus\n    }, data.position);\n    displayToast(isSelect, row.id);\n  } // trigger an information message for user on select change\n\n\n  function displayToast(isSelect, id) {\n    const {\n      type,\n      icon,\n      dir\n    } = {\n      type: isSelect ? \"Done\" : \"Incomplete\",\n      icon: isSelect ? \"🎉\" : \"🙇🏻‍♂️\",\n      dir: isSelect ? \"👇🏻\" : \"👆🏻\"\n    };\n    const title = `${isSelect ? select.length + 1 : select.length - 1}/${data.questions.length} Done`;\n    const subTitle = `Question pushed ${dir} the table.`;\n    const Card = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 5\n      }\n    }, title, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"emojiFix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 14\n      }\n    }, icon)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"toast-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 5\n      }\n    }, subTitle));\n    toast(Card, {\n      className: `toast-${type}`,\n      autoClose: 2000,\n      closeButton: true\n    });\n  } //Notes component\n\n\n  const NoteSection = props => {\n    var _data$questions$id;\n\n    let id = localStorage.getItem(\"cid\");\n    const [quickNotes, setQuickNotes] = useState((_data$questions$id = data.questions[id]) === null || _data$questions$id === void 0 ? void 0 : _data$questions$id.Notes);\n\n    const addnewnotes = event => {\n      setQuickNotes(event.target.value);\n    };\n\n    const onadd = () => {\n      let key = topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase(); // let id = localStorage.getItem(\"cid\");\n\n      if (id) {\n        let que = data.questions;\n        que[id].Notes = quickNotes.trim().length === 0 ? \"\" : quickNotes.trim();\n        updateData(key, {\n          started: data.started,\n          doneQuestions: data.doneQuestions,\n          questions: que\n        }, data.position);\n        localStorage.removeItem(\"cid\");\n      } else {\n        saveAndExitNotes();\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"note-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"note-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-title\",\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      maxLength: \"432\",\n      className: \"note-section\",\n      placeholder: \"your notes here\",\n      onChange: addnewnotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"note-exit\",\n      onClick: saveAndExitNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 8\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"note-save\",\n      onClick: onadd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 8\n      }\n    }, \"Save\")))));\n  }; //function for closing notes\n\n\n  function saveAndExitNotes() {\n    document.getElementsByClassName(\"note-section\")[0].style.display = \"none\";\n    document.getElementsByClassName(\"note-exit\")[0].style.display = \"none\";\n    document.getElementsByClassName(\"note-save\")[0].style.display = \"none\";\n    document.getElementsByClassName(\"note-area\")[0].style.display = \"none\";\n    localStorage.removeItem(\"cid\");\n  } //funtion for taking notes\n\n\n  function shownotes(ind) {\n    document.getElementsByClassName(\"note-section\")[0].style.display = \"block\";\n    document.getElementsByClassName(\"note-exit\")[0].style.display = \"block\";\n    document.getElementsByClassName(\"note-save\")[0].style.display = \"block\";\n    document.getElementsByClassName(\"note-area\")[0].style.display = \"block\";\n    localStorage.setItem(\"cid\", ind);\n    document.getElementsByClassName(\"note-section\")[0].value = data.questions[ind].Notes;\n    document.getElementsByClassName(\"question-title\")[0].innerHTML = data.questions[ind].Problem;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }\n  }, \"Topics\"), \"/\", topicName), data === undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"grow\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 6\n    }\n  })) : /*#__PURE__*/React.createElement(ToolkitProvider, {\n    className: \"float-right\",\n    keyField: \"id\",\n    data: questionsTableData,\n    columns: columns,\n    rowStyle: rowStyle,\n    search: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 5\n    }\n  }, props => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-rand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 8\n    }\n  }, SearchBar({ ...props.searchProps\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container container-custom\",\n    style: {\n      overflowAnchor: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    duration: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n    selectRow: selectRow,\n    sort: sortMode,\n    classes: dark ? \"dark-table\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 10\n    }\n  })))))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(NoteSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 4\n    }\n  }));\n}\n\nfunction RandomButton({\n  data\n}) {\n  let min = 0;\n  let max = data.questions.length - 1;\n  const [rnd, setRnd] = useState(Math.floor(Math.random() * (max - min)) + min);\n\n  function pickRandomHandler() {\n    setRnd(Math.floor(Math.random() * (max - min)) + min);\n  }\n\n  return /*#__PURE__*/React.createElement(Button, {\n    className: \"pick-random-btn\",\n    onClick: pickRandomHandler,\n    variant: \"outline-primary\",\n    href: data.questions[rnd].URL,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 3\n    }\n  }, \"Pick Random\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"woman-juggling-emoji\",\n    className: \"emojiFix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 4\n    }\n  }, \"\\uD83E\\uDD39\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"));\n}","map":{"version":3,"sources":["/Users/constantine/Dev/FrontEnd/progress/src/components/Topic/Topic.js"],"names":["React","useState","useEffect","useContext","BootstrapTable","ToolkitProvider","InputGroup","FormControl","Spinner","OverlayTrigger","Tooltip","Badge","Fade","Link","toast","ToastContainer","ThemeContext","Button","Topic","data","updateData","select","setSelected","questionsTableData","setQuestionsTableData","topicName","setTopicName","dark","undefined","doneQuestion","tableData","questions","map","question","index","Done","push","id","URL","fontWeight","fontSize","Problem","Notes","length","renderTooltipView","renderTooltipAdd","float","color","cursor","shownotes","_is_selected","_search_text","props","SearchBar","handleChange","e","onSearch","target","value","borderTopLeftRadius","borderBottomLeftRadius","background","padding","doneQuestions","columns","dataField","text","headerStyle","width","textAlign","style","events","onClick","column","columnIndex","row","rowIndex","handleSelect","hidden","sort","rowStyle","selectRow","mode","selected","onSelect","hideSelectAll","sortMode","order","isSelect","key","replace","toLowerCase","newDoneQuestion","updatedQuestionsStatus","pos","indexOf","splice","started","position","displayToast","type","icon","dir","title","subTitle","Card","className","autoClose","closeButton","NoteSection","localStorage","getItem","quickNotes","setQuickNotes","addnewnotes","event","onadd","que","trim","removeItem","saveAndExitNotes","document","getElementsByClassName","display","ind","setItem","innerHTML","searchProps","overflowAnchor","baseProps","RandomButton","min","max","rnd","setRnd","Math","floor","random","pickRandomHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Fade from \"react-reveal/Fade\";\nimport { Link } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"./Topic.css\";\nimport { ThemeContext } from \"../../App\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function Topic({ data, updateData }) {\n\t/*\n\t  This component takes data releted to a paticular topic \n\t  and updateData() from App component\n\t*/\n\t/*\n\t  Setting state for fields that comes from `data` prop \n\t  so that `data` prop is not undefined on reload\n\t*/\n\tconst [select, setSelected] = useState([]);\n\tconst [questionsTableData, setQuestionsTableData] = useState([]);\n\tconst [topicName, setTopicName] = useState(\"\");\n\n\tconst dark = useContext(ThemeContext);\n\t// updating states using useEffect with dependency  on `data` prop\n\tuseEffect(() => {\n\t\tif (data !== undefined) {\n\t\t\tlet doneQuestion = [];\n\n\t\t\tlet tableData = data.questions.map((question, index) => {\n\t\t\t\tif (question.Done) {\n\t\t\t\t\tdoneQuestion.push(index);\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t|\tHidden properties `_is_selected` and `_search_text` are used to sort the table\n\t\t\t\t|\tand search the table respectively. react-bootstrap-table does not allow sorting\n\t\t\t\t|\tby selectRow by default, and requires plain text to perform searches.\n\t\t\t\t*/\n\t\t\t\treturn {\n\t\t\t\t\tid: index,\n\t\t\t\t\tquestion: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{/* Question link */}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={question.URL}\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\tstyle={{ fontWeight: \"600\", fontSize: \"20px\" }}\n\t\t\t\t\t\t\t\tclassName=\"question-link\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{question.Problem}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\t\t\t\toverlay={question.Notes && question.Notes.length !== 0 ? renderTooltipView : renderTooltipAdd}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\twidth=\"16\"\n\t\t\t\t\t\t\t\t\theight=\"16\"\n\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t\tclass={question.Notes && question.Notes.length !== 0 ? \"bi bi-sticky-fill\" : \"bi bi-sticky\"}\n\t\t\t\t\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\t\t\t\t\tstyle={{ float: \"right\", color: \"green\", cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\t\tonClick={() => shownotes(index)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{question.Notes && question.Notes.length !== 0 ? (\n\t\t\t\t\t\t\t\t\t\t<path d=\"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1h-11zm6 8.5a1 1 0 0 1 1-1h4.396a.25.25 0 0 1 .177.427l-5.146 5.146a.25.25 0 0 1-.427-.177V9.5z\" />\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<path d=\"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1h-11zM2 2.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 .5.5V8H9.5A1.5 1.5 0 0 0 8 9.5V14H2.5a.5.5 0 0 1-.5-.5v-11zm7 11.293V9.5a.5.5 0 0 1 .5-.5h4.293L9 13.793z\" />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\n\t\t\t\t\t_is_selected: question.Done,\n\t\t\t\t\t_search_text: question.Problem,\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetQuestionsTableData(tableData);\n\t\t\tsetTopicName(data.topicName);\n\t\t\tsetSelected(doneQuestion);\n\t\t}\n\t}, [data]);\n\n\t//tooltip functions\n\tconst renderTooltipView = (props) => (\n\t\t<Tooltip {...props} className=\"in\" id=\"button-tooltip\">\n\t\t\tView Notes\n\t\t</Tooltip>\n\t);\n\n\tconst renderTooltipAdd = (props) => (\n\t\t<Tooltip {...props} className=\"in\" id=\"button-tooltip\">\n\t\t\tAdd Notes\n\t\t</Tooltip>\n\t);\n\n\t// seacrh bar config\n\tconst SearchBar = (props) => {\n\t\tconst handleChange = (e) => {\n\t\t\tprops.onSearch(e.target.value);\n\t\t};\n\t\treturn (\n\t\t\t<div className=\"topic-input-container\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<InputGroup className=\"mb-4\">\n\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t<RandomButton data={data} />\n\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tclassName=\"text-center search-input-container\"\n\t\t\t\t\t\t\tplaceholder=\"Search Question.. 🔍\"\n\t\t\t\t\t\t\taria-label=\"Search Question\"\n\t\t\t\t\t\t\taria-describedby=\"basic-addon2\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tstyle={{ fontSize: \"18px\", fontWeight: \"600\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\t\t\tstyle={{ borderTopLeftRadius: \"0px\", borderBottomLeftRadius: \"0px\", background: \"rgb(200, 230, 201)\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<p className=\"completed-questions\" style={{ color: \"black\", padding: \"8px\" }}>\n\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\t{data.doneQuestions}/{data.questions.length}\n\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\tDone{\" \"}\n\t\t\t\t\t\t\t\t\t<span className=\"emojiFix\" role=\"img\" aria-label=\"checker\">\n\t\t\t\t\t\t\t\t\t\t&#9989;\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\t// table config\n\tconst columns = [\n\t\t{\n\t\t\tdataField: \"id\",\n\t\t\ttext: \"Q-Id\",\n\t\t\theaderStyle: { width: \"80px\", fontSize: \"20px\", textAlign: \"center\" },\n\t\t\tstyle: { fontSize: \"20px\", cursor: \"pointer\", textAlign: \"center\" },\n\t\t\tevents: {\n\t\t\t\tonClick: (e, column, columnIndex, row, rowIndex) => {\n\t\t\t\t\thandleSelect(row, !row._is_selected);\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdataField: \"question\",\n\t\t\ttext: \"Questions\",\n\t\t\theaderStyle: { fontSize: \"20px\", textAlign: \"center\" },\n\t\t},\n\t\t{\n\t\t\tdataField: \"_is_selected\",\n\t\t\ttext: \"Is Selected\",\n\t\t\theaderStyle: { fontSize: \"20px\" },\n\t\t\thidden: true,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"_search_text\",\n\t\t\ttext: \"Search Text\",\n\t\t\theaderStyle: { fontSize: \"20px\" },\n\t\t\thidden: true,\n\t\t},\n\t];\n\tconst rowStyle = { fontSize: \"20px\" };\n\tconst selectRow = {\n\t\tmode: \"checkbox\",\n\t\tstyle: { background: dark ? \"#393E46\" : \"#c8e6c9\", fontSize: \"24px\" },\n\t\tselected: select,\n\t\tonSelect: handleSelect,\n\t\thideSelectAll: true,\n\t};\n\tconst sortMode = {\n\t\tdataField: \"_is_selected\",\n\t\torder: \"asc\",\n\t};\n\n\t// func() triggered when a question is marked done\n\tfunction handleSelect(row, isSelect) {\n\t\tlet key = topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase();\n\t\tlet newDoneQuestion = [...select];\n\t\tlet updatedQuestionsStatus = data.questions.map((question, index) => {\n\t\t\tif (row.id === index) {\n\t\t\t\tquestion.Done = isSelect;\n\t\t\t\tif (isSelect) {\n\t\t\t\t\tnewDoneQuestion.push(row.id);\n\t\t\t\t} else {\n\t\t\t\t\tvar pos = newDoneQuestion.indexOf(row.id);\n\t\t\t\t\tnewDoneQuestion.splice(pos, 1);\n\t\t\t\t}\n\t\t\t\treturn question;\n\t\t\t} else {\n\t\t\t\treturn question;\n\t\t\t}\n\t\t});\n\t\tupdateData(\n\t\t\tkey,\n\t\t\t{\n\t\t\t\tstarted: newDoneQuestion.length > 0 ? true : false,\n\t\t\t\tdoneQuestions: newDoneQuestion.length,\n\t\t\t\tquestions: updatedQuestionsStatus,\n\t\t\t},\n\t\t\tdata.position\n\t\t);\n\t\tdisplayToast(isSelect, row.id);\n\t}\n\n\t// trigger an information message for user on select change\n\tfunction displayToast(isSelect, id) {\n\t\tconst { type, icon, dir } = {\n\t\t\ttype: isSelect ? \"Done\" : \"Incomplete\",\n\t\t\ticon: isSelect ? \"🎉\" : \"🙇🏻‍♂️\",\n\t\t\tdir: isSelect ? \"👇🏻\" : \"👆🏻\",\n\t\t};\n\n\t\tconst title = `${isSelect ? select.length + 1 : select.length - 1}/${data.questions.length} Done`;\n\t\tconst subTitle = `Question pushed ${dir} the table.`;\n\n\t\tconst Card = (\n\t\t\t<>\n\t\t\t\t<p>\n\t\t\t\t\t{title} <span className=\"emojiFix\">{icon}</span>\n\t\t\t\t</p>\n\t\t\t\t<p className=\"toast-subtitle\">{subTitle}</p>\n\t\t\t</>\n\t\t);\n\n\t\ttoast(Card, {\n\t\t\tclassName: `toast-${type}`,\n\t\t\tautoClose: 2000,\n\t\t\tcloseButton: true,\n\t\t});\n\t}\n\n\t//Notes component\n\tconst NoteSection = (props) => {\n\t\tlet id = localStorage.getItem(\"cid\");\n\n\t\tconst [quickNotes, setQuickNotes] = useState(data.questions[id]?.Notes);\n\t\tconst addnewnotes = (event) => {\n\t\t\tsetQuickNotes(event.target.value);\n\t\t};\n\n\t\tconst onadd = () => {\n\t\t\tlet key = topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase();\n\t\t\t// let id = localStorage.getItem(\"cid\");\n\t\t\tif (id) {\n\t\t\t\tlet que = data.questions;\n\t\t\t\tque[id].Notes = quickNotes.trim().length === 0 ? \"\" : quickNotes.trim();\n\t\t\t\tupdateData(\n\t\t\t\t\tkey,\n\t\t\t\t\t{\n\t\t\t\t\t\tstarted: data.started,\n\t\t\t\t\t\tdoneQuestions: data.doneQuestions,\n\t\t\t\t\t\tquestions: que,\n\t\t\t\t\t},\n\t\t\t\t\tdata.position\n\t\t\t\t);\n\t\t\t\tlocalStorage.removeItem(\"cid\");\n\t\t\t} else {\n\t\t\t\tsaveAndExitNotes();\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"note-area\">\n\t\t\t\t\t<div className=\"note-container\">\n\t\t\t\t\t\t<div className=\"question-title\" style={{ color: \"black\" }}></div>\n\t\t\t\t\t\t<textarea maxLength=\"432\" className=\"note-section\" placeholder=\"your notes here\" onChange={addnewnotes}></textarea>\n\t\t\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t\t\t<button className=\"note-exit\" onClick={saveAndExitNotes}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button className=\"note-save\" onClick={onadd}>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\t//function for closing notes\n\tfunction saveAndExitNotes() {\n\t\tdocument.getElementsByClassName(\"note-section\")[0].style.display = \"none\";\n\t\tdocument.getElementsByClassName(\"note-exit\")[0].style.display = \"none\";\n\t\tdocument.getElementsByClassName(\"note-save\")[0].style.display = \"none\";\n\t\tdocument.getElementsByClassName(\"note-area\")[0].style.display = \"none\";\n\t\tlocalStorage.removeItem(\"cid\");\n\t}\n\t//funtion for taking notes\n\tfunction shownotes(ind) {\n\t\tdocument.getElementsByClassName(\"note-section\")[0].style.display = \"block\";\n\t\tdocument.getElementsByClassName(\"note-exit\")[0].style.display = \"block\";\n\t\tdocument.getElementsByClassName(\"note-save\")[0].style.display = \"block\";\n\t\tdocument.getElementsByClassName(\"note-area\")[0].style.display = \"block\";\n\n\t\tlocalStorage.setItem(\"cid\", ind);\n\t\tdocument.getElementsByClassName(\"note-section\")[0].value = data.questions[ind].Notes;\n\t\tdocument.getElementsByClassName(\"question-title\")[0].innerHTML = data.questions[ind].Problem;\n\t}\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"text-center mb-4\">\n\t\t\t\t<Link to=\"/\">Topics</Link>/{topicName}\n\t\t\t</h3>\n\n\t\t\t{data === undefined ? (\n\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t<Spinner animation=\"grow\" variant=\"success\" />\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<ToolkitProvider\n\t\t\t\t\tclassName=\"float-right\"\n\t\t\t\t\tkeyField=\"id\"\n\t\t\t\t\tdata={questionsTableData}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\trowStyle={rowStyle}\n\t\t\t\t\tsearch\n\t\t\t\t>\n\t\t\t\t\t{(props) => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"header-rand\">{SearchBar({ ...props.searchProps })}</div>\n\t\t\t\t\t\t\t<div className=\"container container-custom\" style={{ overflowAnchor: \"none\" }}>\n\t\t\t\t\t\t\t\t<Fade duration={600}>\n\t\t\t\t\t\t\t\t\t<BootstrapTable {...props.baseProps} selectRow={selectRow} sort={sortMode} classes={dark ? \"dark-table\" : \"\"} />\n\t\t\t\t\t\t\t\t</Fade>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</ToolkitProvider>\n\t\t\t)}\n\t\t\t<ToastContainer />\n\t\t\t<NoteSection />\n\t\t</>\n\t);\n}\n\nfunction RandomButton({ data }) {\n\tlet min = 0;\n\tlet max = data.questions.length - 1;\n\tconst [rnd, setRnd] = useState(Math.floor(Math.random() * (max - min)) + min);\n\tfunction pickRandomHandler() {\n\t\tsetRnd(Math.floor(Math.random() * (max - min)) + min);\n\t}\n\treturn (\n\t\t<Button\n\t\t\tclassName=\"pick-random-btn\"\n\t\t\tonClick={pickRandomHandler}\n\t\t\tvariant=\"outline-primary\"\n\t\t\thref={data.questions[rnd].URL}\n\t\t\ttarget=\"_blank\"\n\t\t>\n\t\t\tPick Random{\" \"}\n\t\t\t<span role=\"img\" aria-label=\"woman-juggling-emoji\" className=\"emojiFix\">\n\t\t\t\t🤹🏻‍♀️\n\t\t\t</span>\n\t\t</Button>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}