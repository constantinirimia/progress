{"ast":null,"code":"var _jsxFileName = \"/Users/constantine/Dev/FrontEnd/progress/src/components/Topic/Topic.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Fade from \"react-reveal/Fade\";\nimport { Link } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"./Topic.css\";\nimport { ThemeContext } from \"../../App\";\nimport Button from \"react-bootstrap/Button\";\nexport default function Topic(_ref) {\n  let {\n    data,\n    updateData\n  } = _ref;\n\n  /*\n   This component takes data releted to a paticular topic \n   and updateData() from App component\n  */\n\n  /*\n   Setting state for fields that comes from `data` prop \n   so that `data` prop is not undefined on reload\n  */\n  const [select, setSelected] = useState([]);\n  const [questionsTableData, setQuestionsTableData] = useState([]);\n  const [topicName, setTopicName] = useState(\"\");\n  const dark = useContext(ThemeContext); // updating states using useEffect with dependency  on `data` prop\n\n  useEffect(() => {\n    if (data !== undefined) {\n      let doneQuestion = [];\n      let tableData = data.questions.map((question, index) => {\n        if (question.Done) {\n          doneQuestion.push(index);\n        }\n        /*\n        |\tHidden properties `_is_selected` and `_search_text` are used to sort the table\n        |\tand search the table respectively. react-bootstrap-table does not allow sorting\n        |\tby selectRow by default, and requires plain text to perform searches.\n        */\n\n\n        return {\n          id: index,\n          question: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n            href: question.URL,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            style: {\n              fontWeight: \"600\",\n              fontSize: \"20px\"\n            },\n            className: \"question-link\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }\n          }, question.Problem), /*#__PURE__*/React.createElement(OverlayTrigger, {\n            placement: \"left\",\n            overlay: question.Notes && question.Notes.length !== 0 ? renderTooltipView : renderTooltipAdd,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"16\",\n            height: \"16\",\n            fill: \"currentColor\",\n            class: question.Notes && question.Notes.length !== 0 ? \"bi bi-sticky-fill\" : \"bi bi-sticky\",\n            viewBox: \"0 0 16 16\",\n            style: {\n              float: \"right\",\n              color: \"green\",\n              cursor: \"pointer\"\n            },\n            onClick: () => shownotes(index),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }\n          }, question.Notes && question.Notes.length !== 0 ? /*#__PURE__*/React.createElement(\"path\", {\n            d: \"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1h-11zm6 8.5a1 1 0 0 1 1-1h4.396a.25.25 0 0 1 .177.427l-5.146 5.146a.25.25 0 0 1-.427-.177V9.5z\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }\n          }) : /*#__PURE__*/React.createElement(\"path\", {\n            d: \"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1h-11zM2 2.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 .5.5V8H9.5A1.5 1.5 0 0 0 8 9.5V14H2.5a.5.5 0 0 1-.5-.5v-11zm7 11.293V9.5a.5.5 0 0 1 .5-.5h4.293L9 13.793z\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }\n          })))),\n          _is_selected: question.Done,\n          _search_text: question.Problem\n        };\n      });\n      setQuestionsTableData(tableData);\n      setTopicName(data.topicName);\n      setSelected(doneQuestion);\n    }\n  }, [data]); //tooltip functions\n\n  const renderTooltipView = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, props, {\n    className: \"in\",\n    id: \"button-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }), \"View Notes\");\n\n  const renderTooltipAdd = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, props, {\n    className: \"in\",\n    id: \"button-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }), \"Add Notes\"); // seacrh bar config\n\n\n  const SearchBar = props => {\n    const handleChange = e => {\n      props.onSearch(e.target.value);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topic-input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RandomButton, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"text-center search-input-container\",\n      placeholder: \"Search Question.. \\uD83D\\uDD0D\",\n      \"aria-label\": \"Search Question\",\n      \"aria-describedby\": \"basic-addon2\",\n      onChange: handleChange,\n      style: {\n        fontSize: \"18px\",\n        fontWeight: \"600\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"success\",\n      style: {\n        borderTopLeftRadius: \"0px\",\n        borderBottomLeftRadius: \"0px\",\n        background: \"rgb(200, 230, 201)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"completed-questions\",\n      style: {\n        color: \"black\",\n        padding: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, data.doneQuestions, \"/\", data.questions.length), \" \", \"Done\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"emojiFix\",\n      role: \"img\",\n      \"aria-label\": \"checker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, \"\\u2705\")))))));\n  }; // table config\n\n\n  const columns = [{\n    dataField: \"id\",\n    text: \"Q-Id\",\n    headerStyle: {\n      width: \"80px\",\n      fontSize: \"20px\",\n      textAlign: \"center\"\n    },\n    style: {\n      fontSize: \"20px\",\n      cursor: \"pointer\",\n      textAlign: \"center\"\n    },\n    events: {\n      onClick: (e, column, columnIndex, row, rowIndex) => {\n        handleSelect(row, !row._is_selected);\n      }\n    }\n  }, {\n    dataField: \"question\",\n    text: \"Questions\",\n    headerStyle: {\n      fontSize: \"20px\",\n      textAlign: \"center\"\n    }\n  }, {\n    dataField: \"_is_selected\",\n    text: \"Is Selected\",\n    headerStyle: {\n      fontSize: \"20px\"\n    },\n    hidden: true,\n    sort: true\n  }, {\n    dataField: \"_search_text\",\n    text: \"Search Text\",\n    headerStyle: {\n      fontSize: \"20px\"\n    },\n    hidden: true\n  }];\n  const rowStyle = {\n    fontSize: \"20px\"\n  };\n  const selectRow = {\n    mode: \"checkbox\",\n    style: {\n      background: dark ? \"#393E46\" : \"#c8e6c9\",\n      fontSize: \"24px\"\n    },\n    selected: select,\n    onSelect: handleSelect,\n    hideSelectAll: true\n  };\n  const sortMode = {\n    dataField: \"_is_selected\",\n    order: \"asc\"\n  }; // func() triggered when a question is marked done\n\n  function handleSelect(row, isSelect) {\n    let key = topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase();\n    let newDoneQuestion = [...select];\n    let updatedQuestionsStatus = data.questions.map((question, index) => {\n      if (row.id === index) {\n        question.Done = isSelect;\n\n        if (isSelect) {\n          newDoneQuestion.push(row.id);\n        } else {\n          var pos = newDoneQuestion.indexOf(row.id);\n          newDoneQuestion.splice(pos, 1);\n        }\n\n        return question;\n      } else {\n        return question;\n      }\n    });\n    updateData(key, {\n      started: newDoneQuestion.length > 0 ? true : false,\n      doneQuestions: newDoneQuestion.length,\n      questions: updatedQuestionsStatus\n    }, data.position);\n    displayToast(isSelect, row.id);\n  } // trigger an information message for user on select change\n\n\n  function displayToast(isSelect, id) {\n    const {\n      type,\n      icon,\n      dir\n    } = {\n      type: isSelect ? \"Done\" : \"Incomplete\",\n      icon: isSelect ? \"🎉\" : \"🙇🏻‍♂️\",\n      dir: isSelect ? \"👇🏻\" : \"👆🏻\"\n    };\n    const title = `${isSelect ? select.length + 1 : select.length - 1}/${data.questions.length} Done`;\n    const subTitle = `Question pushed ${dir} the table.`;\n    const Card = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, title, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"emojiFix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }\n    }, icon)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"toast-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }\n    }, subTitle));\n    toast(Card, {\n      className: `toast-${type}`,\n      autoClose: 2000,\n      closeButton: true\n    });\n  } //Notes component\n\n\n  const NoteSection = props => {\n    var _data$questions$id;\n\n    let id = localStorage.getItem(\"cid\");\n    const [quickNotes, setQuickNotes] = useState((_data$questions$id = data.questions[id]) === null || _data$questions$id === void 0 ? void 0 : _data$questions$id.Notes);\n\n    const addnewnotes = event => {\n      setQuickNotes(event.target.value);\n    };\n\n    const onadd = () => {\n      let key = topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase(); // let id = localStorage.getItem(\"cid\");\n\n      if (id) {\n        let que = data.questions;\n        que[id].Notes = quickNotes.trim().length === 0 ? \"\" : quickNotes.trim();\n        updateData(key, {\n          started: data.started,\n          doneQuestions: data.doneQuestions,\n          questions: que\n        }, data.position);\n        localStorage.removeItem(\"cid\");\n      } else {\n        saveAndExitNotes();\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"note-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"note-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-title\",\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      maxLength: \"432\",\n      className: \"note-section\",\n      placeholder: \"your notes here\",\n      onChange: addnewnotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"note-exit\",\n      onClick: saveAndExitNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 15\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"note-save\",\n      onClick: onadd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 15\n      }\n    }, \"Save\")))));\n  }; //function for closing notes\n\n\n  function saveAndExitNotes() {\n    document.getElementsByClassName(\"note-section\")[0].style.display = \"none\";\n    document.getElementsByClassName(\"note-exit\")[0].style.display = \"none\";\n    document.getElementsByClassName(\"note-save\")[0].style.display = \"none\";\n    document.getElementsByClassName(\"note-area\")[0].style.display = \"none\";\n    localStorage.removeItem(\"cid\");\n  } //funtion for taking notes\n\n\n  function shownotes(ind) {\n    document.getElementsByClassName(\"note-section\")[0].style.display = \"block\";\n    document.getElementsByClassName(\"note-exit\")[0].style.display = \"block\";\n    document.getElementsByClassName(\"note-save\")[0].style.display = \"block\";\n    document.getElementsByClassName(\"note-area\")[0].style.display = \"block\";\n    localStorage.setItem(\"cid\", ind);\n    document.getElementsByClassName(\"note-section\")[0].value = data.questions[ind].Notes;\n    document.getElementsByClassName(\"question-title\")[0].innerHTML = data.questions[ind].Problem;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }\n  }, \"Topics\"), \"/\", topicName), data === undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"grow\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(ToolkitProvider, {\n    className: \"float-right\",\n    keyField: \"id\",\n    data: questionsTableData,\n    columns: columns,\n    rowStyle: rowStyle,\n    search: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }, props => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-rand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 15\n    }\n  }, SearchBar({ ...props.searchProps\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container container-custom\",\n    style: {\n      overflowAnchor: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    duration: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n    selectRow: selectRow,\n    sort: sortMode,\n    classes: dark ? \"dark-table\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NoteSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction RandomButton(_ref2) {\n  let {\n    data\n  } = _ref2;\n  let min = 0;\n  let max = data.questions.length - 1;\n  const [rnd, setRnd] = useState(Math.floor(Math.random() * (max - min)) + min);\n\n  function pickRandomHandler() {\n    setRnd(Math.floor(Math.random() * (max - min)) + min);\n  }\n\n  return /*#__PURE__*/React.createElement(Button, {\n    className: \"pick-random-btn\",\n    onClick: pickRandomHandler,\n    variant: \"outline-primary\",\n    href: data.questions[rnd].URL,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }\n  }, \"Pick Random\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"woman-juggling-emoji\",\n    className: \"emojiFix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }\n  }, \"\\uD83E\\uDD39\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"pick-random-btn\",\n    onClick: pickRandomHandler,\n    variant: \"outline-primary\",\n    href: data.questions[rnd].URL,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }\n  }, \"lala\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"woman-juggling-emoji\",\n    className: \"emojiFix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }\n  }, \"\\uD83E\\uDD39\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"));\n}\n\nfunction RandomButton1(_ref3) {\n  let {\n    data\n  } = _ref3;\n  let min = 0;\n  let max = data.questions.length - 1;\n  const [rnd, setRnd] = useState(Math.floor(Math.random() * (max - min)) + min);\n\n  function pickRandomHandler() {\n    setRnd(Math.floor(Math.random() * (max - min)) + min);\n  }\n\n  return /*#__PURE__*/React.createElement(Button, {\n    className: \"pick-random-btn\",\n    onClick: pickRandomHandler,\n    variant: \"outline-primary\",\n    href: data.questions[rnd].URL,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 5\n    }\n  }, \"lala\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"woman-juggling-emoji\",\n    className: \"emojiFix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }\n  }, \"\\uD83E\\uDD39\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"));\n}","map":{"version":3,"sources":["/Users/constantine/Dev/FrontEnd/progress/src/components/Topic/Topic.js"],"names":["React","useState","useEffect","useContext","BootstrapTable","ToolkitProvider","InputGroup","FormControl","Spinner","OverlayTrigger","Tooltip","Badge","Fade","Link","toast","ToastContainer","ThemeContext","Button","Topic","data","updateData","select","setSelected","questionsTableData","setQuestionsTableData","topicName","setTopicName","dark","undefined","doneQuestion","tableData","questions","map","question","index","Done","push","id","URL","fontWeight","fontSize","Problem","Notes","length","renderTooltipView","renderTooltipAdd","float","color","cursor","shownotes","_is_selected","_search_text","props","SearchBar","handleChange","e","onSearch","target","value","borderTopLeftRadius","borderBottomLeftRadius","background","padding","doneQuestions","columns","dataField","text","headerStyle","width","textAlign","style","events","onClick","column","columnIndex","row","rowIndex","handleSelect","hidden","sort","rowStyle","selectRow","mode","selected","onSelect","hideSelectAll","sortMode","order","isSelect","key","replace","toLowerCase","newDoneQuestion","updatedQuestionsStatus","pos","indexOf","splice","started","position","displayToast","type","icon","dir","title","subTitle","Card","className","autoClose","closeButton","NoteSection","localStorage","getItem","quickNotes","setQuickNotes","addnewnotes","event","onadd","que","trim","removeItem","saveAndExitNotes","document","getElementsByClassName","display","ind","setItem","innerHTML","searchProps","overflowAnchor","baseProps","RandomButton","min","max","rnd","setRnd","Math","floor","random","pickRandomHandler","RandomButton1"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Fade from \"react-reveal/Fade\";\nimport { Link } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"./Topic.css\";\nimport { ThemeContext } from \"../../App\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function Topic({ data, updateData }) {\n  /*\n\t  This component takes data releted to a paticular topic \n\t  and updateData() from App component\n\t*/\n  /*\n\t  Setting state for fields that comes from `data` prop \n\t  so that `data` prop is not undefined on reload\n\t*/\n  const [select, setSelected] = useState([]);\n  const [questionsTableData, setQuestionsTableData] = useState([]);\n  const [topicName, setTopicName] = useState(\"\");\n\n  const dark = useContext(ThemeContext);\n  // updating states using useEffect with dependency  on `data` prop\n  useEffect(() => {\n    if (data !== undefined) {\n      let doneQuestion = [];\n\n      let tableData = data.questions.map((question, index) => {\n        if (question.Done) {\n          doneQuestion.push(index);\n        }\n        /*\n\t\t\t\t|\tHidden properties `_is_selected` and `_search_text` are used to sort the table\n\t\t\t\t|\tand search the table respectively. react-bootstrap-table does not allow sorting\n\t\t\t\t|\tby selectRow by default, and requires plain text to perform searches.\n\t\t\t\t*/\n        return {\n          id: index,\n          question: (\n            <>\n              {/* Question link */}\n              <a\n                href={question.URL}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ fontWeight: \"600\", fontSize: \"20px\" }}\n                className=\"question-link\"\n              >\n                {question.Problem}\n              </a>\n              <OverlayTrigger\n                placement=\"left\"\n                overlay={\n                  question.Notes && question.Notes.length !== 0\n                    ? renderTooltipView\n                    : renderTooltipAdd\n                }\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"16\"\n                  height=\"16\"\n                  fill=\"currentColor\"\n                  class={\n                    question.Notes && question.Notes.length !== 0\n                      ? \"bi bi-sticky-fill\"\n                      : \"bi bi-sticky\"\n                  }\n                  viewBox=\"0 0 16 16\"\n                  style={{ float: \"right\", color: \"green\", cursor: \"pointer\" }}\n                  onClick={() => shownotes(index)}\n                >\n                  {question.Notes && question.Notes.length !== 0 ? (\n                    <path d=\"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1h-11zm6 8.5a1 1 0 0 1 1-1h4.396a.25.25 0 0 1 .177.427l-5.146 5.146a.25.25 0 0 1-.427-.177V9.5z\" />\n                  ) : (\n                    <path d=\"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1h-11zM2 2.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 .5.5V8H9.5A1.5 1.5 0 0 0 8 9.5V14H2.5a.5.5 0 0 1-.5-.5v-11zm7 11.293V9.5a.5.5 0 0 1 .5-.5h4.293L9 13.793z\" />\n                  )}\n                </svg>\n              </OverlayTrigger>\n            </>\n          ),\n\n          _is_selected: question.Done,\n          _search_text: question.Problem,\n        };\n      });\n      setQuestionsTableData(tableData);\n      setTopicName(data.topicName);\n      setSelected(doneQuestion);\n    }\n  }, [data]);\n\n  //tooltip functions\n  const renderTooltipView = (props) => (\n    <Tooltip {...props} className=\"in\" id=\"button-tooltip\">\n      View Notes\n    </Tooltip>\n  );\n\n  const renderTooltipAdd = (props) => (\n    <Tooltip {...props} className=\"in\" id=\"button-tooltip\">\n      Add Notes\n    </Tooltip>\n  );\n\n  // seacrh bar config\n  const SearchBar = (props) => {\n    const handleChange = (e) => {\n      props.onSearch(e.target.value);\n    };\n    return (\n      <div className=\"topic-input-container\">\n        <div className=\"container\">\n          <InputGroup className=\"mb-4\">\n            <InputGroup.Append>\n              <RandomButton data={data} />\n            </InputGroup.Append>\n            <FormControl\n              className=\"text-center search-input-container\"\n              placeholder=\"Search Question.. 🔍\"\n              aria-label=\"Search Question\"\n              aria-describedby=\"basic-addon2\"\n              onChange={handleChange}\n              style={{ fontSize: \"18px\", fontWeight: \"600\" }}\n            />\n            <InputGroup.Prepend>\n              <Badge\n                variant=\"success\"\n                style={{\n                  borderTopLeftRadius: \"0px\",\n                  borderBottomLeftRadius: \"0px\",\n                  background: \"rgb(200, 230, 201)\",\n                }}\n              >\n                <p\n                  className=\"completed-questions\"\n                  style={{ color: \"black\", padding: \"8px\" }}\n                >\n                  <span style={{ fontWeight: \"bold\" }}>\n                    {data.doneQuestions}/{data.questions.length}\n                  </span>{\" \"}\n                  Done{\" \"}\n                  <span className=\"emojiFix\" role=\"img\" aria-label=\"checker\">\n                    &#9989;\n                  </span>\n                </p>\n              </Badge>\n            </InputGroup.Prepend>\n          </InputGroup>\n        </div>\n      </div>\n    );\n  };\n  // table config\n  const columns = [\n    {\n      dataField: \"id\",\n      text: \"Q-Id\",\n      headerStyle: { width: \"80px\", fontSize: \"20px\", textAlign: \"center\" },\n      style: { fontSize: \"20px\", cursor: \"pointer\", textAlign: \"center\" },\n      events: {\n        onClick: (e, column, columnIndex, row, rowIndex) => {\n          handleSelect(row, !row._is_selected);\n        },\n      },\n    },\n    {\n      dataField: \"question\",\n      text: \"Questions\",\n      headerStyle: { fontSize: \"20px\", textAlign: \"center\" },\n    },\n    {\n      dataField: \"_is_selected\",\n      text: \"Is Selected\",\n      headerStyle: { fontSize: \"20px\" },\n      hidden: true,\n      sort: true,\n    },\n    {\n      dataField: \"_search_text\",\n      text: \"Search Text\",\n      headerStyle: { fontSize: \"20px\" },\n      hidden: true,\n    },\n  ];\n  const rowStyle = { fontSize: \"20px\" };\n  const selectRow = {\n    mode: \"checkbox\",\n    style: { background: dark ? \"#393E46\" : \"#c8e6c9\", fontSize: \"24px\" },\n    selected: select,\n    onSelect: handleSelect,\n    hideSelectAll: true,\n  };\n  const sortMode = {\n    dataField: \"_is_selected\",\n    order: \"asc\",\n  };\n\n  // func() triggered when a question is marked done\n  function handleSelect(row, isSelect) {\n    let key = topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase();\n    let newDoneQuestion = [...select];\n    let updatedQuestionsStatus = data.questions.map((question, index) => {\n      if (row.id === index) {\n        question.Done = isSelect;\n        if (isSelect) {\n          newDoneQuestion.push(row.id);\n        } else {\n          var pos = newDoneQuestion.indexOf(row.id);\n          newDoneQuestion.splice(pos, 1);\n        }\n        return question;\n      } else {\n        return question;\n      }\n    });\n    updateData(\n      key,\n      {\n        started: newDoneQuestion.length > 0 ? true : false,\n        doneQuestions: newDoneQuestion.length,\n        questions: updatedQuestionsStatus,\n      },\n      data.position\n    );\n    displayToast(isSelect, row.id);\n  }\n\n  // trigger an information message for user on select change\n  function displayToast(isSelect, id) {\n    const { type, icon, dir } = {\n      type: isSelect ? \"Done\" : \"Incomplete\",\n      icon: isSelect ? \"🎉\" : \"🙇🏻‍♂️\",\n      dir: isSelect ? \"👇🏻\" : \"👆🏻\",\n    };\n\n    const title = `${isSelect ? select.length + 1 : select.length - 1}/${\n      data.questions.length\n    } Done`;\n    const subTitle = `Question pushed ${dir} the table.`;\n\n    const Card = (\n      <>\n        <p>\n          {title} <span className=\"emojiFix\">{icon}</span>\n        </p>\n        <p className=\"toast-subtitle\">{subTitle}</p>\n      </>\n    );\n\n    toast(Card, {\n      className: `toast-${type}`,\n      autoClose: 2000,\n      closeButton: true,\n    });\n  }\n\n  //Notes component\n  const NoteSection = (props) => {\n    let id = localStorage.getItem(\"cid\");\n\n    const [quickNotes, setQuickNotes] = useState(data.questions[id]?.Notes);\n    const addnewnotes = (event) => {\n      setQuickNotes(event.target.value);\n    };\n\n    const onadd = () => {\n      let key = topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase();\n      // let id = localStorage.getItem(\"cid\");\n      if (id) {\n        let que = data.questions;\n        que[id].Notes = quickNotes.trim().length === 0 ? \"\" : quickNotes.trim();\n        updateData(\n          key,\n          {\n            started: data.started,\n            doneQuestions: data.doneQuestions,\n            questions: que,\n          },\n          data.position\n        );\n        localStorage.removeItem(\"cid\");\n      } else {\n        saveAndExitNotes();\n      }\n    };\n\n    return (\n      <>\n        <div className=\"note-area\">\n          <div className=\"note-container\">\n            <div className=\"question-title\" style={{ color: \"black\" }}></div>\n            <textarea\n              maxLength=\"432\"\n              className=\"note-section\"\n              placeholder=\"your notes here\"\n              onChange={addnewnotes}\n            ></textarea>\n            <div className=\"button-container\">\n              <button className=\"note-exit\" onClick={saveAndExitNotes}>\n                Close\n              </button>\n              <button className=\"note-save\" onClick={onadd}>\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  };\n  //function for closing notes\n  function saveAndExitNotes() {\n    document.getElementsByClassName(\"note-section\")[0].style.display = \"none\";\n    document.getElementsByClassName(\"note-exit\")[0].style.display = \"none\";\n    document.getElementsByClassName(\"note-save\")[0].style.display = \"none\";\n    document.getElementsByClassName(\"note-area\")[0].style.display = \"none\";\n    localStorage.removeItem(\"cid\");\n  }\n  //funtion for taking notes\n  function shownotes(ind) {\n    document.getElementsByClassName(\"note-section\")[0].style.display = \"block\";\n    document.getElementsByClassName(\"note-exit\")[0].style.display = \"block\";\n    document.getElementsByClassName(\"note-save\")[0].style.display = \"block\";\n    document.getElementsByClassName(\"note-area\")[0].style.display = \"block\";\n\n    localStorage.setItem(\"cid\", ind);\n    document.getElementsByClassName(\"note-section\")[0].value =\n      data.questions[ind].Notes;\n    document.getElementsByClassName(\"question-title\")[0].innerHTML =\n      data.questions[ind].Problem;\n  }\n  return (\n    <>\n      <h3 className=\"text-center mb-4\">\n        <Link to=\"/progress\">Topics</Link>/{topicName}\n      </h3>\n\n      {data === undefined ? (\n        <div className=\"d-flex justify-content-center\">\n          <Spinner animation=\"grow\" variant=\"success\" />\n        </div>\n      ) : (\n        <ToolkitProvider\n          className=\"float-right\"\n          keyField=\"id\"\n          data={questionsTableData}\n          columns={columns}\n          rowStyle={rowStyle}\n          search\n        >\n          {(props) => (\n            <div>\n              <div className=\"header-rand\">\n                {SearchBar({ ...props.searchProps })}\n              </div>\n              <div\n                className=\"container container-custom\"\n                style={{ overflowAnchor: \"none\" }}\n              >\n                <Fade duration={600}>\n                  <BootstrapTable\n                    {...props.baseProps}\n                    selectRow={selectRow}\n                    sort={sortMode}\n                    classes={dark ? \"dark-table\" : \"\"}\n                  />\n                </Fade>\n              </div>\n            </div>\n          )}\n        </ToolkitProvider>\n      )}\n      <ToastContainer />\n      <NoteSection />\n    </>\n  );\n}\n\nfunction RandomButton({ data }) {\n  let min = 0;\n  let max = data.questions.length - 1;\n  const [rnd, setRnd] = useState(Math.floor(Math.random() * (max - min)) + min);\n  function pickRandomHandler() {\n    setRnd(Math.floor(Math.random() * (max - min)) + min);\n  }\n  return (\n    (\n      <Button\n        className=\"pick-random-btn\"\n        onClick={pickRandomHandler}\n        variant=\"outline-primary\"\n        href={data.questions[rnd].URL}\n        target=\"_blank\"\n      >\n        Pick Random{\" \"}\n        <span role=\"img\" aria-label=\"woman-juggling-emoji\" className=\"emojiFix\">\n          🤹🏻‍♀️\n        </span>\n      </Button>\n    ),\n    (\n      <Button\n        className=\"pick-random-btn\"\n        onClick={pickRandomHandler}\n        variant=\"outline-primary\"\n        href={data.questions[rnd].URL}\n        target=\"_blank\"\n      >\n        lala{\" \"}\n        <span role=\"img\" aria-label=\"woman-juggling-emoji\" className=\"emojiFix\">\n          🤹🏻‍♀️\n        </span>\n      </Button>\n    )\n  );\n}\n\nfunction RandomButton1({ data }) {\n  let min = 0;\n  let max = data.questions.length - 1;\n  const [rnd, setRnd] = useState(Math.floor(Math.random() * (max - min)) + min);\n  function pickRandomHandler() {\n    setRnd(Math.floor(Math.random() * (max - min)) + min);\n  }\n  return (\n    <Button\n      className=\"pick-random-btn\"\n      onClick={pickRandomHandler}\n      variant=\"outline-primary\"\n      href={data.questions[rnd].URL}\n      target=\"_blank\"\n    >\n      lala{\" \"}\n      <span role=\"img\" aria-label=\"woman-juggling-emoji\" className=\"emojiFix\">\n        🤹🏻‍♀️\n      </span>\n    </Button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}