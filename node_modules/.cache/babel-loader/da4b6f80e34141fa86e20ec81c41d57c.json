{"ast":null,"code":"import React,{useContext}from\"react\";import Card from\"react-bootstrap/Card\";import ProgressBar from\"react-bootstrap/ProgressBar\";import Badge from\"react-bootstrap/Badge\";import Row from\"react-bootstrap/Row\";import Col from\"react-bootstrap/Col\";import Fade from\"react-reveal/Fade\";import{Link}from\"react-router-dom\";import{ThemeContext}from\"../../App\";import\"./topicCard.css\";export default function TopicCard(_ref){var questionData=_ref.questionData;var dark=useContext(ThemeContext);// This component takes all the topicsData(here questionData ) and renders a TopicCard Component\n// Utility func() to find the progress in percentage\nvar findPercentage=function findPercentage(doneQuestions,totalQuestions){return Math.round(doneQuestions/totalQuestions*100);};var totalSolved=0;var totalQuestions=0;// Mapping questionData to topicCard array\nvar topicCard=questionData.map(function(topic,index){var topicName=topic.topicName,doneQuestions=topic.doneQuestions,questions=topic.questions,started=topic.started;var percentDone=findPercentage(doneQuestions,questions.length);var questionsRemainig=questions.length-doneQuestions;//adding solved questions of every topic to totalSolved\ntotalSolved+=doneQuestions;totalQuestions+=questions.length;if(started){return/*#__PURE__*/React.createElement(Fade,{duration:500+index*0.4,key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"col mb-4\"},/*#__PURE__*/React.createElement(Link,{to:\"/\".concat(topic.topicName.replace(/[^A-Z0-9]+/gi,\"_\").toLowerCase()),style:{textDecoration:\"none\"}},/*#__PURE__*/React.createElement(Card,{className:\"mb-3 inprogress-card animate__slideInDown hvr-grow \".concat(dark?\"darkCard\":\"\")},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"topicName\"},topic.topicName)),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(Badge,{pill:true,variant:\"success\",className:\"float-right\",style:{fontWeight:\"500\",cursor:\"pointer\"}},questionsRemainig===0?\"Done 👏🏻\":\"Solve Now 🙇🏻‍♂️\")))),/*#__PURE__*/React.createElement(Card.Text,{className:\"totalQuestion\"},\"Total Questions \",topic.questions.length,\" \",/*#__PURE__*/React.createElement(\"br\",null),\"\".concat(questionsRemainig),\" More to go\"),/*#__PURE__*/React.createElement(\"p\",{className:\"percentDone mb-1\"},/*#__PURE__*/React.createElement(\"b\",null,percentDone,\"% Done\")),/*#__PURE__*/React.createElement(ProgressBar,{animated:percentDone===100?false:true,variant:\"success\",now:percentDone}))))));}else{return/*#__PURE__*/React.createElement(Fade,{duration:500+index*50,key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"col mb-4\"},/*#__PURE__*/React.createElement(Link,{to:\"/\".concat(topic.topicName.replace(/[^A-Z0-9]+/gi,\"_\").toLowerCase()),style:{textDecoration:\"none\"}},/*#__PURE__*/React.createElement(Card,{className:\"mb-3 notstarted-card hvr-grow \".concat(dark?\"darkCard\":\"\")},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"topicName\"},\" \",topicName,\" \")),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(Badge,{pill:true,variant:\"primary\",className:\"float-right\",style:{fontWeight:\"500\",cursor:\"pointer\"}},\"Start Now\")))),/*#__PURE__*/React.createElement(Card.Text,{className:\"totalQuestion\"},\"Total Questions \",questions.length),/*#__PURE__*/React.createElement(\"p\",{className:\"percentDone mb-1\"},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(\"i\",null,\"Not yet started\"))))))));}});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",{className:\"app-heading2 text-center mb-3\",color:\"black\"},\"Lets get this DONE\",\" \",/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"fire\"},\"\\uD83D\\uDD25\")),/*#__PURE__*/React.createElement(\"h4\",{className:\"text-center mb-4\"},totalSolved?\"Total Questions Solved : \".concat(totalSolved,\" (\").concat((totalSolved/totalQuestions*100).toFixed(2),\"% Done)\"):\"Start Solving\",/*#__PURE__*/React.createElement(\"p\",{className:\"percentDone container mt-1\"},totalSolved?/*#__PURE__*/React.createElement(ProgressBar,{animated:(totalSolved/totalQuestions*100).toFixed(2)===\"100\"?false:true,variant:\"success\",now:(totalSolved/totalQuestions*100).toFixed(2),style:{margin:\"0.2em 5em\"}}):null)),/*#__PURE__*/React.createElement(\"div\",{className:\"container container-custom\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row row-cols-1 row-cols-md-3 mt-3 grids\"},topicCard)));}","map":{"version":3,"sources":["/Users/constantine/Dev/FrontEnd/progress/src/components/TopicCard/TopicCard.js"],"names":["React","useContext","Card","ProgressBar","Badge","Row","Col","Fade","Link","ThemeContext","TopicCard","questionData","dark","findPercentage","doneQuestions","totalQuestions","Math","round","totalSolved","topicCard","map","topic","index","topicName","questions","started","percentDone","length","questionsRemainig","replace","toLowerCase","textDecoration","fontWeight","cursor","toFixed","margin"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Fade from \"react-reveal/Fade\";\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from \"../../App\";\n\nimport \"./topicCard.css\";\n\nexport default function TopicCard({ questionData }) {\n  const dark = useContext(ThemeContext);\n\n  // This component takes all the topicsData(here questionData ) and renders a TopicCard Component\n\n  // Utility func() to find the progress in percentage\n  const findPercentage = (doneQuestions, totalQuestions) => {\n    return Math.round((doneQuestions / totalQuestions) * 100);\n  };\n\n  let totalSolved = 0;\n  let totalQuestions = 0;\n  // Mapping questionData to topicCard array\n  let topicCard = questionData.map((topic, index) => {\n    let { topicName, doneQuestions, questions, started } = topic;\n    let percentDone = findPercentage(doneQuestions, questions.length);\n    let questionsRemainig = questions.length - doneQuestions;\n    //adding solved questions of every topic to totalSolved\n    totalSolved += doneQuestions;\n    totalQuestions += questions.length;\n    if (started) {\n      return (\n        <Fade duration={500 + index * 0.4} key={index}>\n          <div className=\"col mb-4\">\n            <Link\n              to={`/${topic.topicName\n                .replace(/[^A-Z0-9]+/gi, \"_\")\n                .toLowerCase()}`}\n              style={{ textDecoration: \"none\" }}\n            >\n              <Card\n                className={`mb-3 inprogress-card animate__slideInDown hvr-grow ${\n                  dark ? \"darkCard\" : \"\"\n                }`}\n              >\n                <Card.Body>\n                  <Row>\n                    <Col>\n                      <Card.Title className=\"topicName\">\n                        {topic.topicName}\n                      </Card.Title>\n                    </Col>\n                    <Col>\n                      <h4>\n                        <Badge\n                          pill\n                          variant=\"success\"\n                          className=\"float-right\"\n                          style={{ fontWeight: \"500\", cursor: \"pointer\" }}\n                        >\n                          {questionsRemainig === 0 ? \"Done 👏🏻\" : \"Solve Now 🙇🏻‍♂️\"}\n                        </Badge>\n                      </h4>\n                    </Col>\n                  </Row>\n                  <Card.Text className=\"totalQuestion\">\n                    Total Questions {topic.questions.length} <br />\n                    {`${questionsRemainig}`} More to go\n                  </Card.Text>\n                  <p className=\"percentDone mb-1\">\n                    <b>{percentDone}% Done</b>\n                  </p>\n                  <ProgressBar\n                    animated={percentDone === 100 ? false : true}\n                    variant=\"success\"\n                    now={percentDone}\n                  />\n                </Card.Body>\n              </Card>\n            </Link>\n          </div>\n        </Fade>\n      );\n    } else {\n      return (\n        <Fade duration={500 + index * 50} key={index}>\n          <div className=\"col mb-4\">\n            <Link\n              to={`/${topic.topicName\n                .replace(/[^A-Z0-9]+/gi, \"_\")\n                .toLowerCase()}`}\n              style={{ textDecoration: \"none\" }}\n            >\n              <Card\n                className={`mb-3 notstarted-card hvr-grow ${\n                  dark ? \"darkCard\" : \"\"\n                }`}\n              >\n                <Card.Body>\n                  <Row>\n                    <Col>\n                      <Card.Title className=\"topicName\">\n                        {\" \"}\n                        {topicName}{\" \"}\n                      </Card.Title>\n                    </Col>\n                    <Col>\n                      <h4>\n                        <Badge\n                          pill\n                          variant=\"primary\"\n                          className=\"float-right\"\n                          style={{ fontWeight: \"500\", cursor: \"pointer\" }}\n                        >\n                          Start Now\n                        </Badge>\n                      </h4>\n                    </Col>\n                  </Row>\n                  <Card.Text className=\"totalQuestion\">\n                    Total Questions {questions.length}\n                  </Card.Text>\n                  <p className=\"percentDone mb-1\">\n                    <b>\n                      <i>Not yet started</i>\n                    </b>\n                  </p>\n                </Card.Body>\n              </Card>\n            </Link>\n          </div>\n        </Fade>\n      );\n    }\n  });\n  return (\n    <>\n      <h3 className=\"app-heading2 text-center mb-3\" color=\"black\">\n        Lets get this DONE{\" \"}\n        <span role=\"img\" aria-label=\"fire\">\n          🔥\n        </span>\n      </h3>\n\n      <h4 className=\"text-center mb-4\">\n        {totalSolved\n          ? `Total Questions Solved : ${totalSolved} (${(\n              (totalSolved / totalQuestions) *\n              100\n            ).toFixed(2)}% Done)`\n          : \"Start Solving\"}\n        <p className=\"percentDone container mt-1\">\n          {totalSolved ? (\n            <ProgressBar\n              animated={\n                ((totalSolved / totalQuestions) * 100).toFixed(2) === \"100\"\n                  ? false\n                  : true\n              }\n              variant=\"success\"\n              now={((totalSolved / totalQuestions) * 100).toFixed(2)}\n              style={{ margin: \"0.2em 5em\" }}\n            />\n          ) : null}\n        </p>\n      </h4>\n      <div className=\"container container-custom\">\n        <div className=\"row row-cols-1 row-cols-md-3 mt-3 grids\">\n          {topicCard}\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}