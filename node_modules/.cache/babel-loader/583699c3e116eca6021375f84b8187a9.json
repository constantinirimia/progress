{"ast":null,"code":"import Localbase from \"localbase\";\nimport QuestionData, { version } from \"src/450DSAFinal.js\";\nlet db = new Localbase(\"db\");\nwindow.db = db;\ndb.config.debug = false;\nconst localVersion = localStorage.getItem(\"450version\");\nwindow.localVersion = localVersion;\nwindow.version = version;\nexport function insertData(callback) {\n  QuestionData.forEach((topic, index) => {\n    db.collection(\"450dsaArchive\").add(topic, topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase());\n  });\n  getData(callback);\n}\nexport function getData(callback) {\n  db.collection(\"450dsaArchive\").get().then(data => {\n    if (data.length === 0) {\n      insertData(callback);\n    } else {\n      data.sort((a, b) => {\n        return a.position - b.position;\n      });\n\n      if (localVersion === null || localVersion === undefined) {\n        localStorage.setItem(\"450version\", 100000000);\n        setTimeout(() => {\n          window.location.reload();\n        }, 3000);\n      }\n\n      if (parseInt(localVersion) !== version) {\n        let i = 0;\n\n        for (let topic of data) {\n          let dataFromJSON = QuestionData[i].questions;\n          let len = dataFromJSON.length;\n          let key = topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase();\n          topic.questions.forEach((qObj, index) => {\n            if (index < len) {\n              if (qObj.Done) {\n                dataFromJSON[index][\"Done\"] = true;\n              }\n\n              if (qObj.hasOwnProperty(\"Bookmark\")) {\n                dataFromJSON[index][\"Bookmark\"] = qObj.Bookmark;\n              } else {\n                dataFromJSON[index][\"Bookmark\"] = false;\n              }\n\n              if (qObj.hasOwnProperty(\"Notes\")) {\n                dataFromJSON[index][\"Notes\"] = qObj.Notes;\n              } else {\n                dataFromJSON[index][\"Notes\"] = \"\";\n              }\n            }\n          });\n          updateDBData(key, {\n            started: topic.started,\n            doneQuestions: topic.doneQuestions,\n            questions: dataFromJSON\n          });\n          i++;\n        }\n\n        localStorage.setItem(\"450version\", version);\n        setTimeout(() => {\n          window.location.reload();\n        }, 3000);\n      } else {\n        return callback(data);\n      }\n    }\n  });\n}\nexport function getTopicData(key, callback) {\n  db.collection(\"450dsaArchive\").doc(key).get().then(document => {\n    callback(document);\n  });\n}\nexport function updateDBData(key, updateData) {\n  db.collection(\"450dsaArchive\").doc(key).update(updateData);\n}\nexport function resetDBData(callback) {\n  db.collection(\"450dsaArchive\").delete().then(response => {\n    callback(response);\n  }).catch(error => {\n    console.log(\"There was an error, do something else\", error);\n  });\n}\nexport function exportDBData(callback) {\n  db.collection(\"450dsaArchive\").get().then(data => {\n    callback(data);\n  });\n}\nexport function importDBData(data, callback) {\n  resetDBData(response => {\n    new Promise((resolve, reject) => {\n      data.forEach((topic, index) => {\n        db.collection(\"450dsaArchive\").add(topic, topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase());\n\n        if (index === data.length - 1) {\n          resolve();\n        }\n      });\n    }).then(() => {\n      getData(data => {\n        callback(data);\n      });\n    });\n  });\n}","map":{"version":3,"sources":["/Users/constantine/Dev/FrontEnd/progress/src/services/dbServices.js"],"names":["Localbase","QuestionData","version","db","window","config","debug","localVersion","localStorage","getItem","insertData","callback","forEach","topic","index","collection","add","topicName","replace","toLowerCase","getData","get","then","data","length","sort","a","b","position","undefined","setItem","setTimeout","location","reload","parseInt","i","dataFromJSON","questions","len","key","qObj","Done","hasOwnProperty","Bookmark","Notes","updateDBData","started","doneQuestions","getTopicData","doc","document","updateData","update","resetDBData","delete","response","catch","error","console","log","exportDBData","importDBData","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import Localbase from \"localbase\";\nimport QuestionData, { version } from \"src/450DSAFinal.js\";\nlet db = new Localbase(\"db\");\nwindow.db = db;\ndb.config.debug = false;\nconst localVersion = localStorage.getItem(\"450version\");\nwindow.localVersion = localVersion;\nwindow.version = version;\n\nexport function insertData(callback) {\n  QuestionData.forEach((topic, index) => {\n    db.collection(\"450dsaArchive\").add(\n      topic,\n      topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase()\n    );\n  });\n  getData(callback);\n}\n\nexport function getData(callback) {\n  db.collection(\"450dsaArchive\")\n    .get()\n    .then((data) => {\n      if (data.length === 0) {\n        insertData(callback);\n      } else {\n        data.sort((a, b) => {\n          return a.position - b.position;\n        });\n        if (localVersion === null || localVersion === undefined) {\n          localStorage.setItem(\"450version\", 100000000);\n          setTimeout(() => {\n            window.location.reload();\n          }, 3000);\n        }\n\n        if (parseInt(localVersion) !== version) {\n          let i = 0;\n          for (let topic of data) {\n            let dataFromJSON = QuestionData[i].questions;\n            let len = dataFromJSON.length;\n            let key = topic.topicName\n              .replace(/[^A-Z0-9]+/gi, \"_\")\n              .toLowerCase();\n            topic.questions.forEach((qObj, index) => {\n              if (index < len) {\n                if (qObj.Done) {\n                  dataFromJSON[index][\"Done\"] = true;\n                }\n                if (qObj.hasOwnProperty(\"Bookmark\")) {\n                  dataFromJSON[index][\"Bookmark\"] = qObj.Bookmark;\n                } else {\n                  dataFromJSON[index][\"Bookmark\"] = false;\n                }\n                if (qObj.hasOwnProperty(\"Notes\")) {\n                  dataFromJSON[index][\"Notes\"] = qObj.Notes;\n                } else {\n                  dataFromJSON[index][\"Notes\"] = \"\";\n                }\n              }\n            });\n            updateDBData(key, {\n              started: topic.started,\n              doneQuestions: topic.doneQuestions,\n              questions: dataFromJSON,\n            });\n            i++;\n          }\n          localStorage.setItem(\"450version\", version);\n          setTimeout(() => {\n            window.location.reload();\n          }, 3000);\n        } else {\n          return callback(data);\n        }\n      }\n    });\n}\n\nexport function getTopicData(key, callback) {\n  db.collection(\"450dsaArchive\")\n    .doc(key)\n    .get()\n    .then((document) => {\n      callback(document);\n    });\n}\n\nexport function updateDBData(key, updateData) {\n  db.collection(\"450dsaArchive\").doc(key).update(updateData);\n}\n\nexport function resetDBData(callback) {\n  db.collection(\"450dsaArchive\")\n    .delete()\n    .then((response) => {\n      callback(response);\n    })\n    .catch((error) => {\n      console.log(\"There was an error, do something else\", error);\n    });\n}\n\nexport function exportDBData(callback) {\n  db.collection(\"450dsaArchive\")\n    .get()\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function importDBData(data, callback) {\n  resetDBData((response) => {\n    new Promise((resolve, reject) => {\n      data.forEach((topic, index) => {\n        db.collection(\"450dsaArchive\").add(\n          topic,\n          topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase()\n        );\n        if (index === data.length - 1) {\n          resolve();\n        }\n      });\n    }).then(() => {\n      getData((data) => {\n        callback(data);\n      });\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}